## Automation Decision Services (ADS) (decisions_ads pattern)

Based on https://www.ibm.com/docs/en/cloud-paks/cp-biz-automation/22.0.1?topic=tasks-automation-decision-services

### ADS project git repo & connection

Needs to be done for every project individually.  
Create Repository. Change *name* in the payload to correspond to your project name.
```bash
curl --insecure --request POST "https://gitea.{{ apps_endpoint_domain }}/api/v1/orgs/ads/repos" \
--header  "Content-Type: application/json" \
--user 'cpadmin:{{ cp4ba_universal_password }}' \
--data-raw '
{
  "auto_init": false,
  "default_branch": "master",
  "description": "",
  "gitignores": "",
  "issue_labels": "",
  "license": "",
  "name": "sandbox",
  "private": true,
  "readme": "",
  "template": false,
  "trust_model": "default"
}
'

```

Open your ADS Sandbox project  
On the top right, click Connect  

Repository URI: https://gitea.{{ apps_endpoint_domain }}/ads/sandbox.git  (adjust *sandbox*)  
Username: cpadmin  
Password: {{ cp4ba_universal_password }}  
Click Connect

### Develop custom libraries

To find out how to create and add External libraries to ADS, follow https://github.com/icp4a/automation-decision-services-samples/tree/21.0.3/samples/ExternalLibraryStartTutorial

To be able to follow the above guide from my environment, I needed to perform the following.

Add settings for Nexus in my local maven settings .m2\settings.xml (Available in Project *apollo-one-shot*, in ConfigMap *nexus-maven-settings* in *settings.xml* file)  


Installed JDK 16 Oracle, added to path.

Add Global CA to jdk/jre cacerts.  
Run mvn command with -Djavax.net.debug=ssl to determine the location of used cacerts file.  
In my case: C:\Program Files\Java\jdk-16.0.1\lib\security\cacerts  
Open KeyStore Explorer as Administrator, open this cacerts, no password.  
Import Global CA crt (available in *apollo-one-shot* Project in global-ca Secret if not provided), save without password.  

Installed VSCode and added Java Extension Pack

